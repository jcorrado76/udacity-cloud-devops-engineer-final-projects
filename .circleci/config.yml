version: '2.1'
orbs:
  docker: circleci/docker@2.0.2
  kubernetes: circleci/kubernetes@1.3.0
  aws-eks: circleci/aws-eks@2.1.2

executors:
  python:
    docker:
      - image: python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli
  hadolint:
    docker:
      - image: hadolint/hadolint:2.2.0-debian
    resource_class: small

jobs:
  lint_docker_container:
    executor: hadolint
    steps:
      - checkout
      - docker/hadolint:
          dockerfiles: flask_app/Dockerfile
  build_and_push_docker_image:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - docker/check
      - docker/build:
          # this is what's passed as the build context; this allows me to write
          # copy requirements.txt or copy app.py without the flask_app/ prefix
          docker-context: flask_app
          # this is the path to the dockerfile - the argument to -f in docker build
          path: flask_app
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          tag: latest
      - docker/push:
          digest-path: /tmp/digest.txt
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          tag: latest
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"

  lint_application:
    executor: python
#    working_directory: ~/udacity-cloud-devops-capstone/flask_app
    steps:
      - checkout
      - restore_cache:
          working_directory: ~/udacity-cloud-devops-capstone/flask_app
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          working_directory: ~/udacity-cloud-devops-capstone/flask_app
          name: install dependencies
          command: |
            # you need the make setup for caching to work correctly
            make setup
            make install

      - save_cache:
          working_directory: ~/udacity-cloud-devops-capstone/flask_app
          paths:
            - .devops
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          working_directory: ~/udacity-cloud-devops-capstone/flask_app
          name: run lint
          command: |
            make lint

  update_kubernetes_image:
    docker:
      - image: cimg/python:3.10.2
    parameters:
      cluster-name:
        description: |
          The name of the cluster to update.
        type: string
      aws-region:
        description: |
          The AWS region to use.
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: kubernetes/flask_app.yaml
          resource-name: deployment/flask-app-deployment


workflows:
  default:
    jobs:
      - lint_application:
          filters:
            branches:
              only:
                - dev
#      - lint_docker_container:
#          filters:
#            branches:
#              only:
#                - dev
#      - build_and_push_docker_image:
#          requires: [lint_docker_container]
#          filters:
#            branches:
#              only:
#                - dev
#      - update_kubernetes_image:
#          requires: [build_and_push_docker_image]
#          cluster-name: udacity-devops-capstone
#          aws-region: us-east-1
#          context: udacity-aws


